//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;
#define ppi pair<int,int>
#define ff first
#define ss second


// } Driver Code Ends
// User function Template for C++

class Solution {
  public:
    int dx[4]={0,0,-1,1};
    int dy[4]={1,-1,0,0};
    bool valid(int x,int y,int n,int m){
        if(x<0||y<0||x>=n||y>=m)
            return 0;
        return 1;
    }
    int shortestDistance(int n, int m, vector<vector<int>> a, int desx, int desy) {
        // code here
        queue<pair<ppi,int>>q;
        int dis[n][m];
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                dis[i][j]=-1;
            }
        }
        dis[0][0]=0;
        q.push({{0,0},0});
        while(!q.empty()){
            pair<ppi,int> f=q.front();
            q.pop();
            int x=f.ff.ff;
            int y=f.ff.ss;
            int xydis=f.ss;
            dis[x][y]=xydis;
            for(int i=0;i<4;i++){
                int nx=dx[i]+x;
                int ny=dy[i]+y;
                if(valid(nx,ny,n,m)&&a[nx][ny]==1){
                    q.push({{nx,ny},xydis+1});
                }
            }
        }
        return dis[desx][desy];
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int N, M, x, y;
        cin >> N >> M;
        vector<vector<int>> v(N, vector<int>(M));
        for (int i = 0; i < N; i++)
            for (int j = 0; j < M; j++) cin >> v[i][j];
        cin >> x >> y;
        Solution ob;
        cout << ob.shortestDistance(N, M, v, x, y) << "\n";
    }
}
// } Driver Code Ends
