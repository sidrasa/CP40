#include <bits/stdc++.h>
#include <iostream>
using namespace std;
const int N=2e5;
vector<int>par(N);
vector<int>sz(N);

2^0->1
2^1->2
2^2->4
2^3->8

int find(int n){  //logn
    if(par[n]==n)
        return n;
    par[n]=find(par[n]);
    return par[n];
}

int combine(int x,int y){
    x=find(x); //log n
    y=find(y); //log n
    if(x!=y){
        // combine small into big
        if(sz[x]>sz[y]){ //1
            // x is the leader bw a and b
            par[y]=x,sz[x]+=sz[y]; //1
        }
        else{
            // y as the leader
            par[x]=y,sz[y]+=sz[x]; //1
        }
    }
}

int check(int x,int y){
    x=find(x);//log n
    y=find(y);//log n
    if(x==y){
        return 1;
    }
    return 0;
}

int main()
{
    for(int i=0;i<N;i++){
        par[i]=i;
        sz[i]=1;
    }
    //n
    int n,q;
    cin>>n>>q;
    while(q--){
        int t,u,v;
        cin>>t>>u>>v;
        //  tc-> q*log n
        if(t==0)
            combine(u,v);
        else{
            cout<<check(u,v)<<"\n";
        }
    }
    
    return 0;
}
